library(xlsx)
#install.packages("tidyverse")
#install.packages("data.table")
#install.packages("dplyr")
install.packages("csv")
library(csv)
write.csv(merge.data.frame(dados))
#salvar a lista de dados em um unico data frame
all_boletim <- data.frame(dados, stringsAsFactors = FALSE)
library(tidyverse)
library(lubridate)
library(data.table)
library(datasets)
source("df_inmet.R")
source("ETo_Calc.R")
###DADOS DIARIOS CURITIBANOS###
#carregar dados outras estações
IAL <- read_csv("https://joaobtj.github.io/boletim_inmet/data/INDAIAL.csv")
#Principal
rm(list=ls())
library(tidyverse)
library(lubridate)
library(data.table)
library(datasets)
source("df_inmet.R")
source("ETo_Calc.R")
###DADOS DIARIOS###
#carregar dados outras estações
IAL <- read_csv("https://joaobtj.github.io/boletim_inmet/data/INDAIAL.csv")
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data=as_date(data))
install.packages("randomForest")
install.packages("caret")
install.packages('Rcpp')
library(Rcpp)
library(caret)
library(randomForest)
library(munsell)
library(ggplot2)
library(ModelMetrics)
library(recipes)
library(assertthat)
library(bindrcpp)
library(glue)
library(pkgconfig)
library(DEoptimR)
library(dplyr)
library(tidyverse)
install.packages("Rcpp")
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
umd_med_CBS <- CBS[1:3000, 8]
umd_med_IAL <- IAL[1:3000, 8]
tabela_umd_med <- c(umd_med_CBS,umd_med_IAL)
#bonco apenas com curitibanos
amostra <- CBS %>% select(-data,-et0) %>% drop_na()
#banco apenas com variaveis iguais entre CBS e os vizinhos
cbs_ial <- inner_join(CBS, IAL, by="data", suffix=c("_cbs", "_ial"))
#install.packages("tidyverse")
#install.packages("data.table")
install.packages("dplyr")
library(dplyr)
amostra
#bonco apenas com curitibanos
amostra <- CBS %>% select(-data,-et0) %>% drop_na()
drop_na
?drop_na
??drop_na
install.packages("tidyverse")
library(tidyverse)
tabela_umd_med <- c(umd_med_CBS,umd_med_IAL)
#bonco apenas com curitibanos
amostra <- CBS %>% select(-data,-et0) %>% ??drop_na()
#bonco apenas com curitibanos
amostra <- CBS %>% select(-data,-et0) %>% ??drop_na()
#bonco apenas com curitibanos
amostra <- CBS %>% select(-data,-et0) %>% drop_na()
#banco apenas com variaveis iguais entre CBS e os vizinhos
cbs_ial <- inner_join(CBS, IAL, by="data", suffix=c("_cbs", "_ial"))
#RandomForest
ind <- createDataPartition(amostra$chuva, p = 0.7, times = 1, list = FALSE)
??createDataPartition
library(caret)
#RandomForest
ind <- createDataPartition(amostra$chuva, p = 0.7, times = 1, list = FALSE)
treino <- amostra[ind,]
teste <- amostra[-ind,]
rf <- randomForest(et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
library(randomForest)
varImpPlot(rf, main = "Random Forest",)
importance(rf)
rf <- randomForest(et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
View(CBS)
rf <- randomForest(et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
rf <- randomForest(et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
rf <- randomForest(eto ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
rf <- randomForest(et0 ~ , data = treino,
rf <- randomForest(et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
rf <- randomForest(amostra.et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
rf <- randomForest(et0 ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
View(treino)
View(teste)
View(amostra)
View(amostra)
rf <- randomForest(tem_med ~ ., data = treino,
ntree = 1000,
mtry = 5,
replace = T,
nodesize = 15,
keep.forest = T,
importance = TRUE
)
varImpPlot(rf, main = "Random Forest",)
importance(rf)
pred_rf <- predict(rf, newdata=teste)
#Modelo linear
lin <- lm(tem_med~., data=treino)
pred_lin <- predict(lin, newdata=teste)
#Modelo linear
lin <- lm(tem_med~., data=treino)
pred_lin <- predict(lin, newdata=teste)
#plot(teste$chuva~pred_rf)
ggplot(data.frame(teste=teste$et0, pred=pred_lin), aes(x=pred, y=teste))+
geom_point()+
geom_abline(slope=1, intercept = 0)
lm(teste$et0~pred_lin) %>% summary()
#plot(teste$chuva~pred_rf)
ggplot(data.frame(teste=teste$tem_med, pred=pred_lin), aes(x=pred, y=teste))+
geom_point()+
geom_abline(slope=1, intercept = 0)
lm(teste$et0~pred_lin) %>% summary()
View(teste)
#bonco apenas com curitibanos
dados <- CBS %>% drop_na()
View(dados)
dados_mensal <- dados
dados_mensal$mes <- strftime(dados_mensal$data, "%m")
View(dados_mensal)
dados_mensal <- dados %%
dados_mensal$mes <- strftime(dados_mensal$data, "%m")
dados_mensal <- dados %%
strftime(dados_mensal$data, "%m")
dados_mensal <- dados %>%
dados_mensal$mes <- strftime(dados_mensal$data, "%m")
dados_mensal <- dados %>%
strftime(dados_mensal$data, "%m")
dados_mensal <- dados_mensal %>% select(-data,-et0)
#agrega valores mensais
dados_agg_mensal <- aggregate(., mes,
dados_mensal,
FUN = median)
#agrega valores mensais
dados_agg_mensal <- aggregate(~ ., mes,
dados_mensal,
FUN = median)
#agrega valores mensais
dados_agg_mensal <- aggregate(dados_mensal ~ ., mes,
dados_mensal,
FUN = median)
#agrega valores mensais
dados_agg_mensal <- aggregate(dados_mensal ~ ., dados_mensal$mes,
dados_mensal,
FUN = median)
#agrega valores mensais
dados_agg_mensal <- aggregate(dados_mensal ~ dados_mensal$mes,
dados_mensal,
FUN = median)
#agrega valores mensais
dados_agg_mensal <- aggregate(dados_mensal$pre_med ~ dados_mensal$mes,
dados_mensal,
FUN = median)
View(dados_agg_mensal)
novo_dado <- dados
nv_dado$mes <- strftime(nv_dado$data, "%m")
nv_dado <- dados
nv_dado$mes <- strftime(nv_dado$data, "%m")
nv_dado$ano <- strftime(nv_dado$data, "%y")
View(dados_mensal)
nv_dado <- dados
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
View(nv_dado)
View(dados_mensal)
nv_dado <- nv_dado %>% select(-data,-et0)
View(nv_dado)
nv_dado$ano <- strftime(nv_dado$data, "%yyyy")
#agrega valores mensais da Temperatura média
dados_agg_mensal <- aggregate(pre_med ~ mes + ano,
nv_dado,
FUN = median)
View(dados_agg_mensal)
#agrega valores mensais da Temperatura média
dados_agg_mensal <- aggregate(pre_med ~ mes + ano,
nv_dado,
FUN = sum)
#agrega valores mensais da Temperatura média
dados_agg_mensal <- aggregate(pre_med ~ mes + ano,
nv_dado,
FUN = median)
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data=as_date(data))
RDC <- read.csv("https://joaobtj.github.io/boletim_inmet/data/RIO%20DO%20CAMPO.csv")
ITA <- read.csv("https://joaobtj.github.io/boletim_inmet/data/ITUPORANGA.csv")
JCA <- read.csv("https://joaobtj.github.io/boletim_inmet/data/JOACABA.csv")
CDR <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CACADOR.csv")
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data=as_date(data))
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv")
View(CBS)
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
umd_med_CBS <- CBS[1:3000, 8]
umd_med_IAL <- IAL[1:3000, 8]
tabela_umd_med <- c(umd_med_CBS,umd_med_IAL)
#banco apenas com curitibanos
amostra <- CBS %>% select(-data,-et0) %>% drop_na()
#banco apenas com variaveis iguais entre CBS e os vizinhos
cbs_ial <- inner_join(CBS, IAL, by="data", suffix=c("_cbs", "_ial"))
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data=as_date(data))
View(CBS)
??as_date
library(lubridate)
install.packages("lubridate")
library(lubridate)
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data = ??as_date(data))
library(tidyverse)
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data = ??as_date(data))
CBS <- read.csv("https://joaobtj.github.io/boletim_inmet/data/CURITIBANOS.csv") %>% mutate(data = as_date(data))
View(dados_agg_mensal)
umd_med_ITA <- IAL[1:3000, 8]
View(umd_med_ITA)
View(ITA)
View(umd_med_IAL)
View(umd_med_ITA)
View(ITA)
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
chuva_CBS <- CBS[1:3000, 2]
chuva_ITA <- IAL[1:3000, 2]
chuva_ITA <- IAL[1:3000, 2]
chuva_JCA <- JCA[1:3000, 2]
chuva_ITA <- ITA[1:3000, 2]
tabela_umd_med <- c(chuva_CBS,chuva_ITA,chuva_JCA)
tabela_chuva <- c(chuva_CBS,chuva_ITA,chuva_JCA)
View(dados_agg_mensal)
cor(amostra)
plot(amostra$chuva,amostra$umd_med)
cor(amostra$chuva,amostra$umd_med)
plot(cor(amostra))
cor(amostra)
plot(amostra$chuva,amostra$umd_med)
abline(lm(amostra$umd_med ~ amostra$chuva))
library(ggplot2)
ggplot(amostra, aes(x=chuva, y=tem_max))+
geom_point(alpha=0.1)+
geom_smooth(method = "lm")
ggplot(cbs_ial, aes(x=chuva_cbs, y=chuva_ial))+
geom_point()
dados2 <- c(CBS, ITA, JCA, RDC) %>% select(-data,-et0) %>% drop_na()
dados2 <- c(CBS, ITA, JCA, RDC)
View(dados2)
dados22 <- inner_join(dados2, by="data", suffix=c("_cbs", "_ita", "_jca", "_rdc"))
dados2 <- c(CBS, ITA)
View(dados2)
###########################################
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
var_CBS <- CBS[1:3000, 8]
var_ITA <- IAL[1:3000, 8]
tabela_var <- c(var_CBS, var_ITA)
var_JCA <- JCA[1:3000, 8]
var_RDC <- RDC[1:3000, 8]
tabela_var2 <- c(var_JCA, var_RDC)
tabela_vars <- c(tabela_var,tabela_var2)
View(tabela_vars)
View(tabela_var)
tabela_umd_med <- c(umd_med_CBS,umd_med_IAL)
View(tabela_umd_med)
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
umd_med_CBS <- CBS[1:3000, 8]
View(umd_med_IAL)
View(umd_med_ITA)
tabela_var <- data.frame(var_CBS, var_ITA)
View(tabela_var)
###########################################
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
var_CBS <- CBS[1:3000, 8]
var_ITA <- ITA[1:3000, 8]
var_JCA <- JCA[1:3000, 8]
var_RDC <- RDC[1:3000, 8]
tabela_var <- data.frame(var_CBS, var_ITA)
View(tabela_var)
tabela_var2 <- data.frame(var_JCA, var_RDC)
View(tabela_var2)
tabela_vars <- data.frame(tabela_var,tabela_var2)
View(tabela_vars)
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>%
data.frame(tabela_var,tabela_var2)
View(tabela_var)
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC)
View(tabela_var)
###########################################
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
tabela_var <- data.frame(CBS$chuva, ITA$chuva) %>%
data.frame(JCA$chuva, RDC$chuva)
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>% drop_na()
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>%
drop_na()
View(tabela_var)
###########################################
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
var_CBS <- CBS[1:3000, ]
var_ITA <- ITA[1:3000, ]
var_JCA <- JCA[1:3000, ]
var_RDC <- RDC[1:3000, ]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>%
drop_na()
View(tabela_var)
nv_dado <- tabela_var
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
nv_dado <- nv_dado %>% select(-data,-et0)
View(nv_dado)
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
nv_dado <- tabela_var
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
View(nv_dado)
###########################################
#construir tabela com variaveis dos vizinhos para prever CBS
#IAL,CBS,CDR,IAL,JCA,XNR,SJM,RDC
var_CBS <- CBS[1:3000, c(1,8)]
var_ITA <- ITA[1:3000, c(1,8)]
var_JCA <- JCA[1:3000, c(1,8)]
var_RDC <- RDC[1:3000, c(1,8)]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>%
drop_na()
nv_dado <- tabela_var
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
View(nv_dado)
var_ITA <- ITA[1:3000, 8]
var_JCA <- JCA[1:3000, 8]
var_RDC <- RDC[1:3000, 8]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>%
drop_na()
nv_dado <- tabela_var
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
View(nv_dado)
nv_dado <- nv_dado %>% select(-data)
#agrega valores mensais de cada ano da Temperatura média
dados_agg_mensal <- aggregate(pre_med ~ mes + ano,
nv_dado,
FUN = median)
#agrega valores mensais de cada ano da Temperatura média
dados_agg_mensal <- aggregate(pto_min ~ mes + ano,
nv_dado,
FUN = median)
View(dados_agg_mensal)
#agrega valores mensais de cada ano da Temperatura média
dados_agg_mensal <- aggregate(. ~ mes + ano,
nv_dado,
FUN = median)
View(dados_agg_mensal)
#construir tabela com variaveis dos vizinhos para prever CBS
#CBS,ITA,JCA,RDC
var_CBS <- CBS[1:3000, ]
var_ITA <- ITA[1:3000, 8]
var_JCA <- JCA[1:3000, 8]
var_RDC <- RDC[1:3000, 8]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>% drop_na()
##Cria coluna: ano e mes
nv_dado <- tabela_var
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
nv_dado <- nv_dado %>% select(-data)
View(nv_dado)
var_CBS <- CBS[1:3000, ]
var_ITA <- ITA[1:3000, 8]
var_JCA <- JCA[1:3000, 8]
var_RDC <- RDC[1:3000, 8]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>% drop_na()
install.packages("randomForest")
install.packages("caret")
install.packages('Rcpp')
library(Rcpp)
library(caret)
install.packages("tidyverse")
install.packages("dplyr")
install.packages("lubridate")
library(tidyverse)
library(lubridate)
library(data.table)
library(datasets)
source("df_inmet.R")
source("ETo_Calc.R")
var_CBS <- CBS[1:3000, ]
var_ITA <- ITA[1:3000, 8]
var_JCA <- JCA[1:3000, 8]
var_RDC <- RDC[1:3000, 8]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>% drop_na()
##Cria coluna: ano e mes
nv_dado <- tabela_var
nv_dado$ano <- strftime(nv_dado$data, "%y")
nv_dado$mes <- strftime(nv_dado$data, "%m")
nv_dado <- nv_dado %>% select(-data)
#agrega valores mensais de cada ano da variavel analisada
dados_agg_mensal <- aggregate(. ~ mes + ano,
nv_dado,
FUN = median)
View(dados_agg_mensal)
View(CBS)
View(ITA)
var_CBS <- CBS[1:3000, ]
var_ITA <- ITA[1:3000, 2]
var_JCA <- JCA[1:3000, 2]
var_RDC <- RDC[1:3000, 2]
tabela_var <- data.frame(var_CBS, var_ITA) %>%
data.frame(var_JCA, var_RDC) %>% drop_na()
#agrega valores mensais de cada ano da variavel analisada
dados_agg_mensal <- aggregate(. ~ mes + ano,
nv_dado,
FUN = sum)
#média do mes em todos os anos
filter(dados_agg_mensal[,20],mes = 1)
#média do mes em todos os anos
filter(dados_agg_mensal[,20],mes = "1")
#média do mes em todos os anos
filter(dados_agg_mensal[,20], mes = "1")
#média do mes em todos os anos
filter(dados_agg_mensal, mes = "1")
#média do mes em todos os anos
show(filter(dados_agg_mensal, mes = "1"))
#média do mes em todos os anos
show(filter(dados_agg_mensal, mes == "1"))
#média do mes em todos os anos
show(filter(dados_agg_mensal[,8], mes == "1"))
#média do mes em todos os anos
show(filter(dados_agg_mensal$var_ITA, mes == "1"))
#média do mes em todos os anos
filter(dados_agg_mensal$var_ITA, mes == "1")
#média do mes em todos os anos
Filter(dados_agg_mensal$var_ITA, mes == "1")
